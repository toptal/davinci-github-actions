name: Build & Push Docker Image
description: |
  Builds release image of a project and pushes to cloud
  ****
  envInputs:
    DOCKER_BUILDX_ENDPOINT: Docker buildx endpoint (Optional if using for GH runners)
    GCR_ACCOUNT_KEY: Necessary token to push image to Google cloud
    GITHUB_TOKEN: GitHub token. Is used to checkout `davinci` branch
    TOPTAL_BUILD_BOT_SSH_KEY: SSH key to access Google cloud

inputs:
  sha:
    required: false
    description: 'Commit hash that will be used as a tag for the Docker image'
    default: ${{ github.sha }}
  image-name:
    required: true
    description: 'Name of the Docker image. Might be used in the next steps (for ex.: deploy a Docker image)'
  build-args:
    required: false
    description: 'Multiline string to describe build arguments that will be used during dockerization'
  environment:
    required: false
    default: staging
    description: 'Determines additional procedures while creating a Docker image. || enum<<br/>`temploy`,<br/>`staging`,<br/>`production`,<br/>>'
  docker-file:
    required: false
    description: 'pathname to Dockerfile'
    default: Dockerfile
  davinci-branch:
    required: false
    description: 'Custom davinci branch'
    default: 'master'
  labels:
    required: false
    description: 'List of metadata for the Docker image'
    default: ''
  context:
    required: false
    description: 'Build context'
    default: '.'
  push:
    required: false
    description: 'Push the image to the registry'
    default: 'true'
  platforms:
    required: false
    description: 'List of target platforms for build'
    default: 'linux/amd64'
  tags:
    required: false
    description: 'Additional tags for the Docker image'
  target:
    required: false
    description: 'Sets the target stage to build'
  # Set checkout davinci to true if you want to checkout davinci repository files
  checkout-davinci:
    required: false
    description: 'Checkout davinci repository'
    default: 'false'
  registry-name:
    required: true
    description: 'Registry to push the builded image'
  gh-runner-driver-opts:
    required: false
    description: 'Driver options for GH Runners'
    default: |
      image=moby/buildkit:buildx-stable-1

runs:
  using: composite
  steps:
    - name: Check out davinci
      if: ${{ inputs.checkout-davinci == 'true' }}
      uses: actions/checkout@v4
      with:
        repository: toptal/davinci
        token: ${{ env.GITHUB_TOKEN }}
        path: davinci
        sparse-checkout: |
          /packages/ci/src/configs/docker/Dockerfile.gha-deploy
          /packages/ci/src/configs/docker/env-runtime.entrypoint.sh
          /packages/davinci/docker/nginx-vhost.conf
        sparse-checkout-cone-mode: false
        ref: ${{ inputs.davinci-branch }}

    - id: meta-build
      shell: bash
      env:
        ENVIRONMENT: ${{ inputs.environment }}
        REGISTRY: ${{ inputs.registry-name }}
      run: |
        latest=$(if [[ $ENVIRONMENT == 'temploy' ]]; then echo false; else echo true; fi)
        echo latest=$latest >> $GITHUB_OUTPUT
        echo REGISTRY_REGION=$(echo $REGISTRY | awk -F'/' '{print $1}') >> $GITHUB_OUTPUT

    - name: Docker meta
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: |
          ${{ inputs.registry-name }}/${{ inputs.image-name }}
        tags: |
          type=raw,enable=true,priority=200,prefix=,suffix=,value=${{ inputs.sha }}
          ${{ inputs.tags }}
        flavor: |
          latest=${{ steps.meta-build.outputs.latest }}

    - name: Use SSH key
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ env.TOPTAL_BUILD_BOT_SSH_KEY }}

    - name: Login to Google Artifact Registry - GAR
      uses: docker/login-action@v3
      with:
        registry: ${{ steps.meta-build.outputs.REGISTRY_REGION }}
        username: _json_key
        password: ${{ env.GCR_ACCOUNT_KEY }}

    - name: Set up Docker Buildx - CI custom runners
      if: "contains(runner.name, 'inf-gha-runners') || contains(runner.name, 'ubuntu2204')"
      uses: docker/setup-buildx-action@v3
      with:
        driver: remote
        endpoint: ${{ env.DOCKER_BUILDX_ENDPOINT }}

    - name: Set up Docker Buildx - GH runners
      if: "!(contains(runner.name, 'inf-gha-runners') && contains(runner.name, 'ubuntu2204'))"
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: ${{ inputs.gh-runner-driver-opts }}


    - name: Build and push release image
      uses: docker/build-push-action@v5
      with:
        provenance: false
        platforms: ${{ inputs.platforms }}
        tags: ${{ steps.meta.outputs.tags }}
        target: ${{ inputs.target }}
        push: ${{ inputs.push }}
        context: ${{ inputs.context }}
        labels: ${{ inputs.labels }}
        file: ${{ inputs.docker-file }}
        build-args: ${{ inputs.build-args }}
        ssh: default
