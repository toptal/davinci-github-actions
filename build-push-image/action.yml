name: Build & Push Docker Image
description: |
  Builds release image of a project and pushes to cloud
  ****
  envInputs:
    GITHUB_TOKEN: GitHub token. Is used to checkout `davinci` branch
    GCR_ACCOUNT_KEY: Necessary token to push image to Google cloud

inputs:
  sha:
    required: true
    description: 'Commit hash that will be used as a tag for the Docker image'
  image-name:
    required: true
    description: 'Name of the Docker image. Might be used in the next steps (for ex.: deploy a Docker image)'
  environment:
    required: false
    default: staging
    description: 'Determines additional procedures while creating a Docker image. || enum<<br/>`temploy`,<br/>`staging`,<br/>`production`,<br/>>'
  build-args:
    required: true
    description: 'Multiline string to describe build arguments that will be used during dockerization'
  docker-file:
    description: 'pathname to Docker file'
    required: false
    default: ./davinci/packages/ci/src/configs/docker/Dockerfile
  davinci-branch:
    description: 'Custom davinci branch'
    required: false
    default: 'master'

runs:
  using: composite
  steps:
    - name: Checkout davinci
      uses: actions/checkout@v3
      with:
        repository: toptal/davinci
        token: ${{ env.GITHUB_TOKEN }}
        path: davinci
        ref: ${{ inputs.davinci-branch }}

    - name: Setup node
      uses: actions/setup-node@v3.2.0
      with:
        node-version: '14.17'

    - id: meta-latest
      shell: bash
      env:
        ENVIRONMENT: ${{ inputs.environment }}
      run: |
        latest=$(if [[ $ENVIRONMENT == 'temploy' ]]; then echo false; else echo true; fi)
        echo latest=$latest >> $GITHUB_OUTPUT

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4.1.1
      with:
        images: |
          gcr.io/toptal-hub/${{ inputs.image-name }}
          us-central1-docker.pkg.dev/toptal-hub/containers/${{ inputs.image-name }}
        tags: |
          type=raw,enable=true,priority=200,prefix=,suffix=,value=${{ inputs.sha }}
        flavor: |
          latest=${{ steps.meta-latest.outputs.latest }}

    - name: Login to Google Container Registry - GCR
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ env.GCR_ACCOUNT_KEY }}

    - name: Login to Google Artifact Registry - GAR
      uses: docker/login-action@v2
      with:
        registry: us-central1-docker.pkg.dev
        username: _json_key
        password: ${{ env.GCR_ACCOUNT_KEY }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push release image
      uses: docker/build-push-action@v3
      with:
        tags: ${{ steps.meta.outputs.tags }}
        push: true
        context: .
        file: ${{ inputs.docker-file }}
        build-args: ${{ inputs.build-args }}
