name: Alpha Package release
description: Builds project and pushes a new alpha release to NPM
outputs:
  versions:
    description: 'List of new versions as output of `.version` file || string'
    value: ${{ steps.publish-package.outputs.versions }}

inputs:
  npm-token:
    required: true
    description: 'NPM token used for publishing. Has to be type Publish || string'
  branch:
    required: true
    description: 'Name of the branch that will be published || string'

runs:
  using: composite
  steps:
    - name: Setup npm # Add our registry to npm config
      shell: bash
      env:
        NPM_TOKEN: ${{ inputs.npm-token }}
      run: |
        npm set "//registry.npmjs.org/:_authToken=$NPM_TOKEN"

    - name: Setup node
      uses: actions/setup-node@v3.2.0
      with:
        node-version: '14.17'

    - uses: toptal/davinci-github-actions/yarn-install@v4.4.2

    - name: Build package
      shell: bash
      run: |
        yarn build:package

    - name: Publish package
      id: publish-package
      shell: bash
      env:
        BRANCH: ${{ inputs.branch }}
      run: |
        # set .github folder as an unchanged, because lerna throws an error if there are uncommited changes
        git checkout .github/

        yarn davinci-engine publish-package \
        --alpha \
        --outputVersion .version \
        --branch "$BRANCH" \

        versions=$(cat .version)
        [ -z "$versions" ] && exit 1

        echo "::set-output name=versions::$versions"
